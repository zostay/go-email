#!/usr/bin/env perl

use v5.36;
use warnings;
use English;
use SemVer;

open my $changes_fh, '<', './Changes'
    or die "cannot open Changes: $!";

my @failures;

my ($prev_ver, $prev_date, $prev_line, $line_is_blank, $line_is_bullet);
my $prev_line_was_blank = '';
my $prev_line_was_bullet = '';
LINE: while (<$changes_fh>) {
    $line_is_blank = '';
    $line_is_bullet = '';
    if (/^WIP(?:  TBD)?$/) {
        if ($INPUT_LINE_NUMBER > 1) {
            push @failures, "$INPUT_LINE_NUMBER: WIP found after line 1";
        }

        $prev_line = $INPUT_LINE_NUMBER;

        next LINE;
    };

    if (/^v(?<vstring>\d\S*)  (?<date>20\d\d-\d\d-\d\d)$/) {
        my $vstring = $+{vstring};
        my $date = $+{date};
        my $ver = SemVer->new($vstring);

        # time is sorted in descending order in the Changes file

        if (defined $prev_ver && $ver > $prev_ver) {
            push @failures, "$INPUT_LINE_NUMBER: version error $ver < $prev_ver from line $prev_line";
        }

        if (defined $prev_date && $date gt $prev_date) {
           push @failures, "$INPUT_LINE_NUMBER: date error $date < $prev_date from line $prev_line";
        }

        if ($INPUT_LINE_NUMBER != 1 && !$prev_line_was_blank) {
            push @failures, "$INPUT_LINE_NUMBER: version heading line missing blank line on line before";
        }

        $prev_ver = $ver;
        $prev_date = $date;
        $prev_line = $INPUT_LINE_NUMBER;

        next LINE;
    };

    if (/^ \* (?<logline>.*)$/) {
        if (!defined $prev_line) {
            push @failures, "$INPUT_LINE_NUMBER: log bullet before version heading or WIP";
        }

        if (defined $prev_line && $INPUT_LINE_NUMBER-1 == $prev_line) {
            push @failures, "$INPUT_LINE_NUMBER: missing blank before log bullet";
        }

        $line_is_bullet = 1;

        next LINE;
    };

    if (/^   (?<logline>.*)$/) {
        if ($prev_line_was_bullet) {
            $line_is_bullet = 1;
        }
        else {
            push @failures, "$INPUT_LINE_NUMBER: appears to be a continuation, but has no previous line to connect with";
        }

        next LINE;
    }

    if (/^$/) {
        $line_is_blank = 1;

        next LINE;
    }

    if (/^\s+$/) {
        push @failures, "$INPUT_LINE_NUMBER: blank line has space in it";

        next LINE;
    }

    push @failures, "$INPUT_LINE_NUMBER: bad line with unknown input";
} continue {
    $prev_line_was_blank = $line_is_blank;
    $prev_line_was_bullet = $line_is_bullet;
}

close $changes_fh;

for my $failure (@failures) {
    say STDERR $failure;
}

exit 1 if @failures;
